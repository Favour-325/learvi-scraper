"""Added Tables & User Modif

Revision ID: cb1fff64a269
Revises: bd4703aa7865
Create Date: 2025-07-31 18:28:57.367402

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'cb1fff64a269'
down_revision: Union[str, Sequence[str], None] = 'bd4703aa7865'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('affiliate',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', name='status'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_affiliate_id'), 'affiliate', ['id'], unique=False)
    op.create_table('announcement',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('ANNOUNCEMENT', 'RESOURCE', 'JOB', 'INTERNSHIP', name='annountype'), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_announcement_id'), 'announcement', ['id'], unique=False)
    op.create_table('scraper_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('course_title', sa.String(), nullable=False),
    sa.Column('udemy_link', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_scraper_log_id'), 'scraper_log', ['id'], unique=False)
    op.create_table('enrollment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_enrollment_id'), 'enrollment', ['id'], unique=False)
    op.add_column('course', sa.Column('description', sa.String(), nullable=False))
    op.add_column('course', sa.Column('publisher', sa.String(), nullable=False))
    op.add_column('course', sa.Column('price', sa.String(), nullable=False))
    op.add_column('course', sa.Column('lang', sa.String(), nullable=False))
    op.add_column('course', sa.Column('created_at', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('course', 'category',
               existing_type=postgresql.ENUM('FREE', 'PREMIUM', name='coursetype'),
               type_=sa.String(),
               nullable=False)
    op.alter_column('course', 'link',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('course', 'expiry_date',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False)
    op.drop_column('course', 'course_type')
    op.drop_column('course', 'date_posted')
    op.alter_column('transaction', 'timestamp',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.add_column('user', sa.Column('affiliate_id', sa.Integer(), nullable=True))
    op.alter_column('user', 'joined_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('user', 'premium_until',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.create_foreign_key(None, 'user', 'affiliate', ['affiliate_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user', type_='foreignkey')
    op.alter_column('user', 'premium_until',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('user', 'joined_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.drop_column('user', 'affiliate_id')
    op.alter_column('transaction', 'timestamp',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.add_column('course', sa.Column('date_posted', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('course', sa.Column('course_type', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.alter_column('course', 'expiry_date',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('course', 'link',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('course', 'category',
               existing_type=sa.String(),
               type_=postgresql.ENUM('FREE', 'PREMIUM', name='coursetype'),
               nullable=True)
    op.drop_column('course', 'created_at')
    op.drop_column('course', 'lang')
    op.drop_column('course', 'price')
    op.drop_column('course', 'publisher')
    op.drop_column('course', 'description')
    op.drop_index(op.f('ix_enrollment_id'), table_name='enrollment')
    op.drop_table('enrollment')
    op.drop_index(op.f('ix_scraper_log_id'), table_name='scraper_log')
    op.drop_table('scraper_log')
    op.drop_index(op.f('ix_announcement_id'), table_name='announcement')
    op.drop_table('announcement')
    op.drop_index(op.f('ix_affiliate_id'), table_name='affiliate')
    op.drop_table('affiliate')
    # ### end Alembic commands ###
