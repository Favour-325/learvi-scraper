"""Removed Payment

Revision ID: 7ae0061dcdcb
Revises: a2b3f1aca7e6
Create Date: 2025-09-04 05:45:10.129519

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7ae0061dcdcb'
down_revision: Union[str, Sequence[str], None] = 'a2b3f1aca7e6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_transaction_id'), table_name='transaction')
    op.drop_index(op.f('ix_transaction_transaction_id'), table_name='transaction')
    op.drop_table('transaction')
    op.drop_column('metrics', 'total_subscribers')
    op.drop_column('metrics', 'monthly_revenue')
    op.drop_column('metrics', 'change_revenue')
    op.drop_column('metrics', 'change_subscribers')
    op.drop_index(op.f('ix_user_is_subscribed'), table_name='user')
    op.drop_column('user', 'subscribed_until')
    op.drop_column('user', 'is_subscribed')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user', sa.Column('is_subscribed', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('user', sa.Column('subscribed_until', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.create_index(op.f('ix_user_is_subscribed'), 'user', ['is_subscribed'], unique=False)
    op.add_column('metrics', sa.Column('change_subscribers', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('metrics', sa.Column('change_revenue', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('metrics', sa.Column('monthly_revenue', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('metrics', sa.Column('total_subscribers', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_table('transaction',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('method', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('PENDING', 'COMPLETED', 'FAILED', name='transstatus'), autoincrement=False, nullable=False),
    sa.Column('amount', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('proof_url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('transaction_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('transaction_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('transaction_pkey'))
    )
    op.create_index(op.f('ix_transaction_transaction_id'), 'transaction', ['transaction_id'], unique=True)
    op.create_index(op.f('ix_transaction_id'), 'transaction', ['id'], unique=False)
    # ### end Alembic commands ###
